#!groovy
// Run docker deploy for k8s-stage
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'stage_agent'
        defaultContainer 'stage-deployment'
        yaml """
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testapp-deployment
  labels:
     app: testapp
     type: stage
spec:
  template:
     metadata:
       name: testapp-pod
       labels:
         app: nodejsapp
         type: stage
     spec:
         containers:
           - name: nodejsapp-erp
             image: "kirillkaragodin/test_app:"${TAG}""
  replicas: 1
  selector:
    matchLabels:
      type: stage

---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-service
spec:
  selector:
    app: nodejsapp
  type: LoadBalancer
  ports:
    - protocol: TCP
      targetPort: 80
      port: 80
      nodePort: 80
"""
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages('Deploy to K8s') {
        stage {
            steps {
                echo " ============== K8S deploy STAGE =================="
                    sh 'scp -r -o StrictHostKeyChecking=no stage-deployment.yaml cloud-user@10.200.80.6:/tmp'
                    sh 'ssh cloud-user@10.200.100.11 kubectl apply -f /tmp/stage-deployment.yaml --kubeconfig=/path/kube.yaml'

            }
        }
    }
}